CLAC
MVACR
MVACR1
MVACR2
MVACR3 #initialize registers
INCR1 #R1=1
INCR2 #R2=1
MVR2AC #8--(loop start)
MUL4
MUL4
MUL4
MUL4 
MVACR #R=R2*256
MVR1AC
ADD 
MVACR #R=R2*256+R1-----C
CLAC
ADDM
"255"
MVACAR #AR=255
MVR2AC
STAC #STORE R2 IN 255 ------ 255 location keeps current value of R2
MVRAC 
MVACR2 #R2=C
LDAC #GET DATA AT C
MUL4
MVACR3 #R3= (DATA AT C)*4 ----1
MVR2AC
DECAC
LDAC
MUL4
DIV2
MVACR #R=(DATA AT C-1)*2 ------2
MVR3AC
ADD
MVACR3
MVR2AC
INCAC
LDAC
MUL4
DIV2
MVACR #R=(DATA AT C+1)*2 ------3
MVR3AC
ADD
MVACR3
CLAC
ADDM 
"255"
MVACR
MVR2AC
SUB
DECAC
LDAC
MUL4
DIV2
MVACR #R=(DATA AT C-255-1)*2 -----4
MVR3AC
ADD
MVACR3
CLAC
ADDM
"255"
MVACR
MVR2AC
SUB
DECAC
DECAC
LDAC
MVACR #R=(DATA AT C-255-1-1) -----5
MVR3AC
ADD
MVACR3
CLAC
ADDM
"255"
MVACR
MVR2AC
SUB
LDAC
MVACR #R=(DATA AT C-255) -----6
MVR3AC
ADD
MVACR3 
CLAC
ADDM
"255"
MVACR
MVR2AC
ADD
INCAC
LDAC
MUL4
DIV2
MVACR #R=(DATA AT C+255+1)*2 ------7
MVR3AC
ADD
MVACR3
CLAC
ADDM
"255"
MVACR
MVR2AC
ADD
LDAC
MVACR #R=(DATA AT C+255) -----8
MVR3AC
ADD
MVACR3
CLAC
ADDM
"255"
MVACR  
MVR2AC
ADD
INCAC
INCAC
LDAC
MVACR #R=(DATA AT C+255+1+1) ------9
MVR3AC
ADD
DIV2
DIV2
DIV2
DIV2
MVACR3 #R3=(1+....+9)/16
CLAC
ADDM
"255"
LDAC
MVACR2 #R2=DATA AT 255 ----- load back the current value of R2 for iteration
DECAC
MUL4
MUL4
MUL4
MUL4
MVACR #R=(R2-1)*256
MVR1AC
ADD
DECAC
MVACAR #AR=(R2-1)*256+R1-1
MVR3AC
STAC #STORE R3 IN AR
CLAC
MVACR3 #R3=0
INCR1 #R1++
MVR1AC
MVACR
CLAC
ADDM
"255"
SUB #AC=255-R1
JUMPNZ
"8"   #pass this point when R1=255
INCR2 #R2++
MVR2AC
MVACR 
CLAC
MVACR1 
INCR1 #R1=1
ADDM
"255"
SUB #AC=255-R2
JUMPNZ
"8"    #pass this point when R2=255
CLAC   #filtering done now start downsampling
MVACR
MVACR1 #i
MVACR2 #j
MVACR3 #k
MVR1AC #170--(loop start)
MUL4
DIV2
MVACR #R=2i
MVR2AC
MUL4
MUL4
MUL4
MUL4
MUL4
DIV2
ADD
LDAC 
MVACR #R=DATA AT 512*j+2i
MVR3AC 
MVACAR #AR=k
MVRAC
STAC #store (DATA AT 512*j+2*i) to k
INCR3 #k++
MVR1AC
MVACR 
CLAC
ADDM
"127"
SUB #AC=127-i ##### I THINK THERE IS AN ERROR IN CODE- i IS NOT INCREMENTED
#INCR1
JUMPNZ
"170" #pass this point when i=127
INCR2 #j++
MVR2AC
MVACR
CLAC
MVACR1 #i=0
ADDM
"127"
SUB #AC=127-j
JUMPNZ
"170" #pass this point when j=127
END 
 
 
